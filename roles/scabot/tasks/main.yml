---
- name: Create scabot user
  user: name="{{scabot_user}}"

- name: Create scabot dirs
  file: path={{item}} state=directory owner="{{scabot_user}}" mode="0755"
  with_items:
      - "{{scabot_home}}/scabot"
      - "{{scabot_home}}/logs"
      - "{{scabot_home}}/.ssh"

# push to deploy with remote scabot@scabot:/home/scabot/scabot
- name: Give core team access to push to scabot
  authorized_key: user="{{scabot_user}}" state="present" key="https://github.com/{{item}}.keys"
  with_items:
      - adriaanm
      - lrytz
      - SethTisue
      - retronym
      - szeiger
      - scala-jenkins # this is how we push from travis ci

- name: Register scabot service with systemd
  copy: src=scabot.service dest=/etc/systemd/system

- name: Configure scabot
  template: src=scabot.conf dest="{{scabot_home}}" owner="{{scabot_user}}"

- name: Configure scabot (prod)
  template: src=production.conf dest="{{scabot_home}}" owner="{{scabot_user}}"

- name: Create scabot runner
  template: src=run dest="{{scabot_home}}" owner="{{scabot_user}}" owner="{{scabot_user}}" mode="0755"

- name: Install ruby (for post-receive hook)
  apt:
      name: ruby
      state: present

- name: Checkout scabot repo
  become_user: "{{scabot_user}}"
  become: yes
  git:
    repo: 'https://github.com/scala/scabot.git'
    dest: "{{scabot_home}}/scabot"

- name: Git config denyCurrentBranch
  become_user: "{{scabot_user}}"
  command: "git config receive.denyCurrentBranch ignore"
  args:
    chdir: "{{scabot_home}}/scabot/"

- name: Setup post-receive hoook
  copy: src=post-receive dest="{{scabot_home}}/scabot/.git/hooks/" owner="{{scabot_user}}" mode="0755"

- name: Build scabot
  become_user: "{{scabot_user}}"
  command: "scripts/stage"
  args:
    chdir: "{{scabot_home}}/scabot/"

- name: Run scabot, run!
  systemd: state=started name=scabot